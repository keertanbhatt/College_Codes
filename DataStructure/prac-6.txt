#include<stdio.h>
#include<conio.h>
#define SIZE 7
int cq[SIZE],f=-1,r=-1;
void insert(int);
void disp();
int del();
void insert(int e)
{
 if((f==0 && r==SIZE-1) || (r==f-1))
 {
printf("\nCircular Queue is overflown!");
 }
 else
 {
if(r==-1)
{
 f=r=0;
}
else if(r==SIZE-1)
{
 r=0;
}
else
{

 r++;
}
cq[r]=e;
 }
}
int del()
{
 int n=-999;
 if(f==-1)
 {
return n;
 }
 else
 {
n=cq[f];
if(f==r)
{
 f=r=-1;
}
else if(f==(SIZE-1))
{
 f=0;
}
else
{
 f++;
}
 }
 return n;
 
}
void disp()
{
 int i=0;
 if(f==-1 && r==-1)
 {
printf("Circular Queue is empty!");
return;
 }
 if(f<=r)
 {
for(i=f;i<=r;i++)
{
 printf("%d ",cq[i]);
}
 }
 else
 {
for(i=f;i<SIZE;i++)
{
 printf("%d ",cq[i]);
}
for(i=0;i<=r;i++)
{
 printf("%d ",cq[i]);
}
 }
}
int main()
 
{
 int n,ch;
 do
 {
printf("\nEnter \n1 to insert\n2 for deletion\n3 for display\n4 to exit\nEnter your 
choice:");
scanf("%d",&ch);
switch(ch)
{
 case 1:
printf("Enter the element to be inserted: ");
scanf("%d",&n);
insert(n);
break;
 case 2:
n=del();
if(n==-999)
{
 printf("\nQueue is underflown!");
}
else
{
 printf("\nThe deleted element= %d",n);
}
break;
 case 3:
printf("\nQueue contents\n");
disp();
}
 } while (ch!=4);
 PEN:190840131006
 return 0;
}
